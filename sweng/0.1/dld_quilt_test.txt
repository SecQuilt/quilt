quilt 0.1 test design
---------------------

Module: quilt_test

Type: Executable Script / daemon process


Internal Dependencies:
    quilt_core

External Dependenies:
    python-pyro(4)
    python-daemon

Prototpe:
    testd
    seiscripts/tests/run_all_tests


Responsibilities:
    Provide an Integration Testing Framework.  

Global:

Classes:

class Qtd : QuiltDaemon

    def __init__
        # setup daemon pid/io variables with defaults
        NOTES:
            previous iteration of design attempted to have the test daemon
            start and stop the query daemons.  The attempt was to have an
            all in one test thing, but in reality the complexity with starting
            a daemon from a daemon was rough, and it didn't buy that much
            since then the this test daemon would only work well for testing
            on one machine.  It is now a stand alone daemon and
            startup/shutdown scripts will coordinate daemons

    def run
        
        # Repeat Forever
            # Read quilt config (should be quilt test config)
            # access value "testing", "includes"
            # iterate each file in the test globs
                # skip file if it does not match includes
                # load unit tests from those files
            # run the tests
            # read sleep value between tests
            # sleep before repeating
            
            

        
Functions:

        
Schema:
    # Provide configuration dir which sets up one local  registrar.  Then sets
up an smd, for testing
qmd, that use it

quilt.conf
[query_master]
name : 'test'

smd.d/test_smd.conf
[test_smd]
asd : asdasd


Scripts:
    Prototpe:
        get_script_path.sh

    Purpose:
        Setup/teardown testing scaffold and run tests

        test_start
            # set python path for modules under test and test modules
            # set config dir to test config
            # start registrar
            # start qmd
            # start qtd

        test_stop
            # stop daemons in opposite order as start
