quilt 0.1 test design
---------------------

Module: quilt_test

Type: Executable Script / daemon process


Internal Dependencies:
    quilt_core

External Dependenies:
    python-pyro(4)
    python-daemon

Prototpe:
    testd
    seiscripts/tests/run_all_tests


Responsibilities:
    Provide an Integration Testing Framework.  

Global:

# set QUILT_CFG_DIR environment variable to expanded path equal to 
# etc folder inside of test folder

Classes:

class Qtd : QuiltDaemon

    def __init__
        # setup daemon pid/io variables with defaults
        NOTES:
            testing seemed to reveal strange behavior when resetting these
            before starting other quilt daemons, but they had to exist
            or errors would occur

    def run
        
        # register the at_exit function to kill the daemons when qtd is killed

        # start registrar
        # start qmd
        # start smd

        # re-setup daemon pid/io variables, this time fully daemonized
        # done qith QuiltDaemon.setup_process()


        # Repeat Forever
            # Read quilt config (should be quilt test config)
            # access value "testing", "includes"
            # iterate each file in the test globs
                # skip file if it does not match includes
                # load unit tests from those files
            # run the tests
            # read sleep value between tests
            # sleep before repeating
            
            
            

        
Functions:

    def at_exit
        # stop smd
        # stop qmd
        # stop registrar
    
        
Schema:
    # Provide configuration dir which sets up one local  registrar.  Then sets
up an smd, for testing
qmd, that use it

quilt.conf
[query_master]
name : 'test'

smd.d/test_smd.conf
[test_smd]
asd : asdasd
