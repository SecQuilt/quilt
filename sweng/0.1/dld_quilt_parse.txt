quilt 0.1 quilt_parse design
-----------------------------

Module: quilt_parse

Type: Library

External Dependencies:
    ast

Internal Dependencies:

Prototype:
    protoparser.py 

Responsibilities:
    Manage the parsing of quilt pattern code


Classes:

    class SourceVisitor: ast.NodeVisitor
        """
        Provide virtual callbacks for each appropriate node of the 
        AST.  Reposnible for collecting sources referenced in pattern
        code
        """
        
        def __init__(self):
            # chain call to parent constructor
            # initialize sourcePattern dictionary member

        def visit_Call(self, node): 
            # call parent's generic visitor functionality to ensure
            #   we maintain nested operation

            
            # AST for a call to a source, looks like this.
            #   Call
            #     Name(source)
            #       Load
            #     Str
            #     Str
            # 

            # we want to test this node to see if it looks like this, and
            # then extract the source's parameters

            # if first subnode is a name, and == "source"
            # collect the next "Str" arguments that follow
            # store these in a sourcePattern Dictionary member

        def __call__(tree):
            # visit the specified tree
            # return the sourcePattern dictionary
 

Functions:


    def get_pattern_src_refs(pattern)
        """
        Parse a pattern string, throw exception if syntax is invalid.
        return the source to pattern to instance dictionary of the sources
        referenced in the code
        """
        see protoparser.py

        # create a SourceVisitor and get the sourcePattern dict

        # TODO Fix ISSUE011
        # return the sourcePattern dict



