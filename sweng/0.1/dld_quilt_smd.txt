quilt 0.1 source manager daemon design
--------------------------------------
    
Module: quilt_smd

Type: Daemon process
        
Internal Dependencies:
    quilt_core

External Dependenies:
    python-pyro(4)
    python-daemon

Responsibilities:
    behave like a good Daemon process
    run a PyRo daemon to host SourceMaster as a remote object 

Classes:

    class SourceManager : QueryMasterClient

        def Query(string query)
            # print out the source manager's name and the query string
            # Store query in member variable

        
        def GetLastQuery()  # returns the last query string
    
        def GetType(self):
            return "SourceManager"
    
Functions:

    def main():
        # call the quilt core main helper
        # setup argument parser in accordance with funcitonal specification
        # parse the arguments, exit with error message if unparseable
        # Create Instance of QuiltConfig
        # call GetSourceManagers and iterate through them
        #   Create the Source Manager objects
        #   store them in a dictionary
        # call util function query_master_client_main_helper

           
