quilt 0.1 quilt registrar design
--------------------------------

Module: quilt_registrar

Type: Daemon Process

Internal Dependencies:
    quilt_core

External Dependenies:
    python-pyro(4)
    python-daemon

Responsibilities:
    behave like a good Daemon process
    run a PyRo name server

Prototype : testnamed

Gotchas:
    Prototyping revealed a general behavior not to relase the port for the
    nameserver right away.  This may be an annoyance during testing, but
    ideally we won't ever really have to restart the nameserver.  Keep an
    eye on this issue, and elevate if needed, this is solvable

Notes:
    To increase scalability, every machine will have its own name server.
    Any remotely accessible objects will be registered with the name
    server on the machine that hosts that object.  This is configurable
    and the interface will allow for using one nameserver for testing.

class Registrar : QuiltDaemon

    def __init__():
        chain to call parent init function
        setup daemon pid/io stuff with QuiltDaemon.setup_process
    def run():
        # Use QuiltConfig to read in configuration 
        # access the registrar's common connection parameters
        #   from the config
        # access other config parameters for
        #   enableBroadcat, bchost, bcport, and set into param dictionary
        # start the pyro nameserver with specified connection parameters
        


Functions:
    def main(argv)
        # get parsed arguments from call to common daemon main helper
        # create daemon with parsed arguments